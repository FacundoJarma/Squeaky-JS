---
import AnimatedText from "../components/AnimatedText.astro";
import Layout from "../layout/layout.astro";
import { getEntry } from "astro:content";
import InicioExerciceSnippet from "../sections/InicioExerciceSnippet.astro";


const lection = await getEntry(
  "lecciones",
  "bucles-diferenciar-cuando-usarlos"
);
const { Content } = await lection.render();
import { Icon } from "astro-icon/components";
---

<Layout title="Squeaky JS | Inicio">
  <main>
    <header class="max-w-6xl mx-auto flex justify-center">
      <section class="flex flex-col items-center max-w-3xl mt-16 mb-36">
        <img src="fondoinicio.png" class="fondo">
        <h1 class="text-6xl font-bold my-6 text-center">
          Te presentamos <span class="text-amber-500">SqueakyJS. </span>
          Tu nuevo profesor
        </h1>
        <p class="text-xl text-white max-w-sm text-center">
          Una forma mas divertida, intercativa y emosionante de aprender JS
        </p>
       
      </section>
    </header>
    <section class="max-w-6xl mx-auto flex justify-around pb-12">
      <ul class="flex flex-col gap-4" id="listOfButtons">
        <li
          class="w-72 h-36 bg-gray-700 p-4 rounded-lg hover:scale-105 hover:rotate-1 duration-200"
          data-openSnippet="lectionSnippet"
          data-selected="true"
        >
          <h3 class="text-xl font-bold text-white">Aprende.</h3>
          <p class="text-xs text-gray-100">
            SqueakyJS es tu lugar seguro para aprender mas acerca de JavaScript.
            Empieza desde cero y aprende todo lo necesario
          </p>
        </li>
        <li
          class="w-72 h-36 bg-gray-700 p-4 rounded-lg hover:scale-105 hover:-rotate-1 duration-200"
          data-openSnippet="exeSnippet"
          data-selected="false"
        >
          <h3 class="text-xl font-bold text-white">Ejercita.</h3>
          <p class="text-xs text-gray-100">
            Podras practicar sobre cada una de las lecciones que leiste ya que
            ceuntan con muchos ejercicos autocorrectivos.En SqueakyJS
            equeivocarse no es un problema
          </p>
        </li>
        <li
          class="w-72 h-36 bg-gray-700 p-4 rounded-lg hover:scale-105 hover:rotate-1 duration-200"
        >
          <h3 class="text-xl font-bold text-white">Codea.</h3>
          <p class="text-xs text-gray-100">
            A programar se aprende programando, SqueakyJS brinda la opcion de
            que resuelvas unos problemas interactivos, donde simulamos un DOM
            que tendras que manipular!
          </p>
        </li>
      </ul>
      <div class="w-[50%] bg-gray-600 p-2 px-6 rounded-lg relative">
        <div class="window">
          <div class="header">
            <div class="dot"></div>
            <div class="dot"></div>
            <div class="dot"></div>
          </div>
          <div id="content">
            <div id="lectionSnippet" class="snippet">
              <h6 class="font-bold">
                Como poder diferenciar que bucle usar en cada caso
              </h6>
              <Content />
            </div>
            <div id="exeSnippet" class="snippet" style="display: none;">
              <InicioExerciceSnippet />
            </div>
          </div>
        </div>
      </div>
    </section>
    <AnimatedText />
  </main>
</Layout>
<style>
.fondo {
  position: absolute;
  margin-top: -5em;
}
</style>
<script>
  const $buttons = document.querySelectorAll(
    "#listOfButtons li"
  ) as NodeListOf<HTMLLIElement>;
  const handleClick = (snippet) => {
    const $snippets = document.querySelectorAll(
      ".snippet"
    ) as NodeListOf<HTMLDivElement>;

    $snippets.forEach(($s) => {
      $s.style.display = "none";
    });

    const $target = document.getElementById(snippet) as HTMLDivElement;
    $target.style.display = "block";
  };
  $buttons.forEach(($button) => {
    $button.addEventListener("click", () => {
      $buttons.forEach(($btn) => ($btn.dataset.selected = "false"));

      $button.dataset.selected = "true";
      handleClick($button.dataset.opensnippet);
    });
  });
</script>

<style>
  li[data-selected="true"] {
    background-color: #a16207 !important;
  }

  .header {
    width: 100%;
    padding: 15px;
    background: #4b5563;
    border-radius: 7px 7px 0 0;
  }

  .window {
    width: 100%;
    background: #1f2937;
    height: 80vh;
    border-radius: 7px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .dot {
    height: 15px;
    width: 15px;
    background: #ed594a;
    display: inline-block;
    border-radius: 50%;
    margin-right: 7px;
  }

  .dot:nth-child(2) {
    background: #fdd800;
  }

  .dot:nth-child(3) {
    background: #5ac05a;
  }
  #content {
    padding-inline: 1em;
    max-height: 89%;
    overflow-y: auto;
  }
  #content {
    h1,
    h2,
    h3,
    h4,
    h6 {
      color: white;
      font-weight: bold;
      margin-block: 0.5em;
    }
    h6 {
      font-size: 36px;
    }
    h2 {
      font-size: 32px;
    }
    h3 {
      font-size: 28px;
    }
    h4 {
      font-size: 24px;
    }
    p {
      color: #b9b9b9;
      margin-block: 0.5em;
    }
    a {
      color: #ce84ff;
      text-decoration: underline;
    }
    ol {
      list-style-type: decimal;
      margin-left: 2em;
    }
    ol > li {
      list-style: decimal;
      font-size: 16px;
    }
    blockquote {
      background-color: #40224e;
      padding-inline: 1em;
      padding-block: 0.3em;
      border-radius: 5px;
      color: #b9b9b9;
    }
    blockquote > p {
      color: white !important;
    }

    .astro-code {
      padding-inline: 1em;
      padding-block: 0.3em;
      border-radius: 10px;
    }
  }
</style>
