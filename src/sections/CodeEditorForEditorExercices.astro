---
const { context, pageUrl } = Astro.props;
import PopUpOfContext from "../components/PopUpOfContext.astro";
---

<script
  type="text/javascript"
  src="https://cdn.jsdelivr.net/npm/monaco-editor/min/vs/loader.js"></script>

<section data-url={pageUrl} id="editorContext">
  <section class="absolute z-50 left-12 top-1/2 -translate-y-1/2 h-[60vh] w-[25em]">
    <div
      class="bg-[#4B5563] h-12 w-full flex justify-between items-center px-4"
    >
      <ul class="flex gap-4 h-4">
        <li class="w-4 h-4 bg-[#ED594A] rounded-full"></li>
        <li class="w-4 h-4 bg-[#FDD800] rounded-full"></li>
        <li class="w-4 h-4 bg-[#5AC05A] rounded-full"></li>
      </ul>
      <PopUpOfContext body={context} />
    </div>
    <div class="wrapper w-full h-full">
      <div class="editor h-full">
        <div class="editor__code h-full">
          <div id="editorCode" class="h-full w-full"></div>
        </div>
      </div>
    </div>
  </section>
  <button
  id="submitCodeBtn"
  class="text-2xl font-bold fixed px-4 py-2 bg-[#33353B]/80 rounded-lg bottom-5 right-5 hover:scale-105 duration-300"
>
  Entregar
</button>
</section>
<script>
  
  // Elements
  const submitCodeBtn = document.getElementById(
    "submitCodeBtn"
  ) as HTMLButtonElement;
  const editorCode = document.getElementById("editorCode");
  const iframe = document.getElementById("editorPage") as HTMLIFrameElement;
  // Monaco loader
  require.config({
    paths: { vs: "https://cdn.jsdelivr.net/npm/monaco-editor/min/vs" },
  });

  window.MonacoEnvironment = {
    getWorkerUrl: function (workerId, label) {
      return `data:text/javascript;charset=utf-8,${encodeURIComponent(`
        self.MonacoEnvironment = {
          baseUrl: 'https://cdn.jsdelivr.net/npm/monaco-editor/min/'
        };
        importScripts('https://cdn.jsdelivr.net/npm/monaco-editor/min/vs/base/worker/workerMain.js');`)}`;
    },
  };

  // Monaco init
  require(["vs/editor/editor.main"], function () {
    createEditor(editorCode);
  });

  var code = "";

  function createEditor(editorContainer) {
    let editor = monaco.editor.create(editorContainer, {
      value: "",
      language: "javascript",
      theme: "vs-dark",
      minimap: { enabled: false },
      contextmenu: false,
      fontSize: 14,
      automaticLayout: true,
      scrollbar: {
        useShadows: false,
        vertical: "visible",
        horizontal: "visible",
        horizontalScrollbarSize: 12,
        verticalScrollbarSize: 12,
      },
    });

    editor.onDidChangeModelContent(() => {
      code = editor.getValue();
    });
  }

  const getPreRenderedHTML = async () => {
    const url = document.getElementById("editorContext")?.dataset.url;
    if (!url) return;
    const html = await fetch(url)
      .then((res) => res.text())
      .then((html) => html);
    return html;
  };

  async function handleSubmitCode() {
    const preRenderedHTML = await getPreRenderedHTML();

    const finalHTML = preRenderedHTML
      .replace("code", code)
      .replace("exe;", "checkExercice()");
    iframe.srcdoc = finalHTML;
  }

  document.addEventListener("DOMContentLoaded", async () => {
    const iframe = document.getElementById("editorPage") as HTMLIFrameElement;
    iframe.setAttribute("srcdoc", await getPreRenderedHTML());
  });

  submitCodeBtn?.addEventListener("click", handleSubmitCode);
</script>
